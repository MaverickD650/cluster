---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 72.5.3
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 15m
      reconcileStrategy: Revision
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  values:
    nameOverride: "prometheus"
    crds:
      enabled: true
      upgradeJob:
        enabled: true
        forceConflicts: true
    cleanPrometheusOperatorObjectNames: true
    prometheusOperator:
      enabled: true
      serviceMonitor:
        selfMonitor: true
      revisionHistoryLimit: 4
    windowsMonitoring:
      enabled: false
    prometheus-windows-exporter:
      prometheus:
        monitor:
          enabled: false
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
          metricRelabelings:
            - sourceLabels: [__name__]
              regex: "node_mountstats_nfs.*"
              action: drop
            - sourceLabels: [__name__]
              regex: "node_nf_conntrack.*"
              action: drop
            - sourceLabels: [__name__]
              regex: "node_sockstat.*"
              action: drop
            - sourceLabels: [__name__]
              regex: "node_timex.*"
              action: drop
            - source_labels: [__name__]
              regex: >-
                node_load1|
                node_load5|
                node_load15|
                node_cpu_seconds_total|
                node_memory_MemAvailable_bytes|
                node_memory_MemTotal_bytes|
                node_filesystem_avail_bytes|
                node_filesystem_size_bytes|
                node_filesystem_usage_bytes|
                node_network_receive_bytes_total|
                node_network_transmit_bytes_total|
                node_disk_read_bytes_total|
                node_disk_written_bytes_total
              action: keep
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricRelabelings:
        - source_labels: [__name__]
          regex: >-
            kube_pod_status_phase|
            kube_pod_container_status_restarts_total|
            kube_pod_container_status_running|
            kube_pod_container_status_terminated_reason|
            kube_pod_container_status_waiting_reason|
            kube_deployment_status_replicas_available|
            kube_deployment_status_replicas_unavailable|
            kube_deployment_status_replicas_updated|
            kube_deployment_spec_replicas|
            kube_namespace_status_phase|
            kube_statefulset_status_replicas_ready|
            kube_statefulset_status_replicas_updated|
            kube_statefulset_status_replicas_current|
            kube_statefulset_replicas|
            kube_daemonset_status_number_ready|
            kube_daemonset_status_number_unavailable|
            kube_daemonset_status_desired_number_scheduled|
            kube_node_status_condition
          action: keep

      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      defaultDashboardsEnabled: true
      datasource:
        enabled: true
        default: true
        httpMethod: "POST"
        scrapeInterval: "30s"
        uid: "prometheus"
    kubeDns:
      enabled: false
    kubeEtcd:
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: cloudflared
          cert-manager.io/private-key-rotation-policy: Always
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.middlewares: traefik-chain-basic@kubernetescrd
        hosts:
          - prom.${DOMAIN_0}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
            - prom.${DOMAIN_0}
            secretName: prometheus-tls-0
      portName: main
      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - memory-snapshot-on-shutdown
        retention: 7d
        retentionSize: 50GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2000Mi