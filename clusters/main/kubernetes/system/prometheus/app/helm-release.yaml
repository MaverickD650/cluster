apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 69.8.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m
      reconcileStrategy: Revision
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    configmap:
      grafana-datasource:
        enabled: "{{ if .Values.grafana.datasource.enabled }}true{{ else }}false{{ end }}"
        labels:
          grafana_datasources: "1"
        data:
          datasource.yaml: |-
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              uid: {{ .Values.grafana.datasource.uid | default "prometheus" }}
              url: http://prometheus-operated.prometheus:{{ .Values.service.main.ports.main.port }}
              access: proxy
              isDefault: {{ .Values.grafana.datasource.default | default true }}
              version: 2
              jsonData:
                httpMethod: {{ .Values.grafana.datasource.httpMethod | default "POST" }}
                timeInterval: {{ .Values.grafana.datasource.scrapeInterval | default "30s" }}
                {{- if .Values.grafana.datasource.timeout }}
                timeout: {{ .Values.grafana.datasource.timeout }}
                {{- end }}
    nameOverride: "prometheus"
    crds:
      enabled: true
    prometheusOperator:
      enabled: true
      serviceMonitor:
        selfMonitor: true
    windowsMonitoring:
      enabled: false
    prometheus-windows-exporter:
      prometheus:
        monitor:
          enabled: false
    grafana:
      enabled: false
      forceDeployDashboards: true
      defaultDashboardsEnabled: true
      datasource:
        enabled: true
        default: true
        httpMethod: "POST"
        scrapeInterval: "30s"
        uid: "prometheus"
    kubeDns:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: cloudflared
          cert-manager.io/private-key-rotation-policy: Always
          traefik.frontend.passHostHeader: "false"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: traefik-chain-basic@kubernetescrd
          traefik.ingress.kubernetes.io/router.tls: "true"
        hosts:
          - prom.${DOMAIN_0}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
            - prom.${DOMAIN_0}
            secretName: prometheus-tls-0
      portName: main
      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false