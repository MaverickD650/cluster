---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/refs/heads/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
  namespace: blocky
spec:
  interval: 15m
  chart:
    spec:
      chart: blocky
      version: 16.6.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    service:
      dns:
        enabled: true
        ports:
          dns:
            enabled: true
            loadBalancerIP: ${BLOCKY_IP}
    # -- set the default DNS upstream servers
    # Primarily designed for inclusion in the TrueNAS SCALE GUI
    defaultUpstreams:
      # Cloudflare
      - https://1.1.1.1/dns-query
      - https://1.0.0.1/dns-query
    # -- Setup caching
    caching:
      minTime: 15m
      maxTime: 0
      maxItemsCount: 0
      prefetching: true
      prefetchExpires: 12h
      prefetchThreshold: 5
      prefetchMaxItemsCount: 0
      cacheTimeNegative: 30m
    # -- set conditional settings
    # Primarily designed for inclusion in the TrueNAS SCALE GUI
    conditional:
      rewrite: []
      # - in: something.com
      #   out: somethingelse.com
      mapping: []
      # - domain: something.com
      #   dnsserver: 192.168.178.1
    # -- set blocking settings using Lists
    # Primarily designed for inclusion in the TrueNAS SCALE GUI
    blocking:
      # -- Sets the blocktype
      blockType: nxDomain
      # -- Sets the block ttl
      blockTTL: 6h
      # -- Sets the block refreshPeriod
      refreshPeriod: 4h
      # -- Sets the block download timeout
      downloadTimeout: 60s
      # -- Sets the block download attempt count
      downloadAttempts: 3
      # -- Sets the block download cooldown
      downloadCooldown: 5s
      # -- Set the start strategy (blocking | failOnError | fast)
      startStrategy: fast
      # -- Sets how many list-groups can be processed at the same time
      processingConcurrency: 8
      # --  Add blocky whitelists
      # `default` name is reservered for TrueCharts included default whitelist
      # example shows the structure, though name should be changed when used
      whitelist:
        []
        # - name: default
        #  lists:
        #   - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/optional-list.txt
        #   - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt
        #   - https://raw.githubusercontent.com/rahilpathan/pihole-whitelist/main/1.LowWL.txt

      # -- Blocky blacklists
      # `default` name is reservered for TrueCharts included default blacklist
      # example shows the structure, though name should be changed when used
      blacklist:
        []
        # - name: default
        #  lists:
        #   - https://big.oisd.nl/domainswild

      # -- Blocky clientGroupsBlock
      clientGroupsBlock:
        - name: default
          groups:
            - default

    k8sgateway:
      enabled: true
      # -- TTL for non-apex responses (in seconds)
      ttl: 300
      # -- Limit what kind of resources to watch, e.g. watchedResources: ["Ingress"]
      watchedResources: []
      # -- Service name of a secondary DNS server (should be `serviceName.namespace`)
      secondary: ""
      # -- Override the default `serviceName.namespace` domain apex
      apex: ""
      # -- list of processed domains
      domains: 
      # -- Delegated domain
      # - domain: "example.com"
      #   # -- Optional configuration option for DNS01 challenge that will redirect all acme
      #   # challenge requests to external cloud domain (e.g. managed by cert-manager)
      #   # See: https://cert-manager.io/docs/configuration/acme/dns01/
      #   dnsChallenge:
      #     enabled: false
      #     domain: dns01.clouddns.com
        - domain: "g5yss.uk"
          dnsChallenge:
            enabled: false
            domain: dns01.clouddns.com
      forward:
        enabled: false
        primary: tls://1.1.1.1
        secondary: tls://1.0.0.1
        options:
          - name: tls_servername
            value: cloudflare-dns.com

    cnpg:
      main:
        backups:
          enabled: true
          credentials: s3
        recovery:
          method: object_store
          credentials: s3

    credentials:
      s3:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}-blocky"
        accessKey: "${S3ID}"
        secretKey: "${S3KEY}"
        encrKey: "${S3KEY}"

    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
          certManager:
            enabled: true
            certificateIssuer: cloudflare
        hosts:
          - host: blocky.${BASE_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
