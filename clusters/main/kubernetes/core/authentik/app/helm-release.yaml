---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/refs/heads/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 32.4.8
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
      reconcileStrategy: Revision
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      s3:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}-authentik"
        accessKey: "${S3ID}"
        secretKey: "${S3KEY}"
        encrKey: "${S3KEY}"
    authentik:
      credentials:
        # Only works on initial install
        email: ${AKinitemail}
        password: ${AKinitpassword}
        # Optional, only set if you want to use it
        bootstrapToken: ""
      
      general:
        disableUpdateCheck: false

      email:
        host: "${AKemailhost}"
        port: 587
        username: ${AKemailuser}
        password: ${AKemailpass}
        useTLS: true
        useSSL: false
        timeout: 10
        from: "${AKemailfrom}"

      outposts:
        proxy:
          enabled: false
          token: ${AKproxauth}
        radius:
          enabled: false
          token: ${AKradauth}
        ldap:
          enabled: false
          token: ${AKldapauth}
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: 'true'
          traefik.ingress.kubernetes.io/router.middlewares: traefik-chain-basic@kubernetescrd
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: cloudflared
        hosts:
          - host: auth.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
      proxy:
        enabled: false
        primary: false
        targetSelector:
          proxy: https
        hosts:
          - host: auth.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix                    
          - host: "*.${DOMAIN_0}"
            paths:
              - path: /outpost.goauthentik.io
                pathType: Prefix
        integrations:
          traefik:
            enabled: true
            entrypoints:
              - websecure
            enableFixedMiddlewares: true
            forceTLS: true
            allowCors: false
            fixedMiddlewares:
              - name: chain-basic
                namespace: ""
          certManager:
            enabled: true
            certificateIssuer: cloudflared
    persistence:
      media:
        volsync:
          - name: media
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 2 * * *"                
      templates:
        volsync:
          - name: templates
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 2 * * *"                   
      blueprints:
        volsync:
          - name: blueprints
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 2 * * *"                   
      certs:
        volsync:
          - name: certs
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 2 * * *"                   
      geoip:
        volsync:
          - name: geoip
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 2 * * *"                   
    cnpg:
      main:
        annotations:
          cnpg.io/skipEmptyWalArchiveCheck: "enabled"
        mode: recovery
        cluster:
          singleNode: true         
        backups:
          enabled: true
          credentials: s3
        recovery:
          method: object_store
          credentials: s3    